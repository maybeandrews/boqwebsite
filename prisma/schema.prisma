generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Project {
  id          Int             @id @default(autoincrement())
  name        String
  description String?
  deadline    DateTime
  tags        String[]
  boqs        BOQ[]
  quotes      Quote[]
  vendors     VendorProject[]
}

model Vendor {
  id       Int             @id @default(autoincrement())
  name     String
  contact  String
  approved Boolean         @default(false)
  username String          @unique
  password String
  BOQ      BOQ[]
  quotes   Quote[]
  projects VendorProject[]
}

model VendorProject {
  id        Int     @id @default(autoincrement())
  vendorId  Int
  projectId Int
  project   Project @relation(fields: [projectId], references: [id])
  vendor    Vendor  @relation(fields: [vendorId], references: [id])

  @@unique([vendorId, projectId])
}

model BOQ {
  id            Int      @id @default(autoincrement())
  projectId     Int
  fileName      String
  filePath      String
  vendorId      Int?
  category      String   // Add this field
  notes         String?
  project       Project  @relation(fields: [projectId], references: [id])
  vendor        Vendor?  @relation(fields: [vendorId], references: [id])
}

model Quote {
  id        Int         @id @default(autoincrement())
  vendorId  Int
  projectId Int
  fileName  String
  filePath  String
  status    QuoteStatus @default(PENDING)
  comments  String?
  value     Decimal?    @db.Decimal(10, 2)
  project   Project     @relation(fields: [projectId], references: [id])
  vendor    Vendor      @relation(fields: [vendorId], references: [id])
}

enum QuoteStatus {
  PENDING
  APPROVED
  REJECTED
}
